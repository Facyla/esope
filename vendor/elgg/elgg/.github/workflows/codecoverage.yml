name: Code Coverage
on: [push]
env:
  ELGG_DB_USER: root
  ELGG_DB_PASS: root
  ELGG_DB_NAME: elgg
  ELGG_DB_PREFIX: elgg_
  
jobs:
  scrutinizer:
    name: Scrutinizer - ${{ matrix.testsuite }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        # Keep number of suites inline with scrutinizer waiting for the same amount of coverage runs
        testsuite: ['unit', 'integration-a-to-d', 'integration-e-to-s', 'integration-t-to-all', 'plugins-unit', 'plugins-integration']

    steps:
      - name: Check if run on the Elgg repo
        if: github.repository != 'Elgg/Elgg'
        run: exit 1
        
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: xdebug
          extensions: gd,pdo,xml,json,mysqli,pdo_mysql,libxml,mbstring
        
      - name: Code checkout
        uses: actions/checkout@v2
        with:
          # Fetch 10 commits or Scrutinizer will throw ("Failed to retrieve commit parents. If you use a shallow git checkout, please checkout at least a depth of one."), see: RepositoryIntrospector at scrutinizer-ci/ocular GitHub repository
          # 10 commits is an arbitrary value that is more than 1 commit
          fetch-depth: 10
        
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
        
      - name: Restore Composer Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      
      - name: Composer install
        run: composer install
      
      - name: Install Elgg
        run: |
          sudo systemctl start mysql
          mysql -u root -proot -e 'SET GLOBAL max_connections = 1000;'
          mysql -u root -proot -e 'create database elgg;'
          php ./elgg-cli install --config ./install/cli/testing_app.php --verbose
          php -f ./.scripts/ci/enable_plugins.php
      
      - name: Test and publish code coverage
        run: |
          ./vendor/bin/phpunit --testsuite ${{ matrix.testsuite }} --coverage-clover=coverage.clover
          ./vendor/bin/ocular code-coverage:upload --format=php-clover coverage.clover
